"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const chalk_1 = require("chalk");
const cli_ux_1 = require("cli-ux");
const plugins_1 = require("../../plugins");
class PluginsInstall extends command_1.Command {
    constructor() {
        super(...arguments);
        this.plugins = new plugins_1.default(this.config);
    }
    async run() {
        const { argv } = this.parse(PluginsInstall);
        for (let plugin of argv) {
            let { name, tag } = parsePlugin(plugin);
            cli_ux_1.default.action.start(`Installing plugin ${chalk_1.default.cyan(this.plugins.friendlyName(name))}`);
            await this.plugins.install(name, tag);
            cli_ux_1.default.action.stop();
        }
    }
}
PluginsInstall.description = 'installs a plugin into the CLI';
PluginsInstall.usage = 'plugins:install PLUGIN...';
PluginsInstall.examples = ['$ <%= config.bin %> plugins:install <%- config.pjson.oclif.examplePlugin || "myplugin" %> '];
PluginsInstall.strict = false;
PluginsInstall.args = [{ name: 'plugin', description: 'plugin to install', required: true }];
PluginsInstall.aliases = ['plugins:add'];
exports.default = PluginsInstall;
function parsePlugin(input) {
    if (input.includes('/')) {
        input = input.slice(1);
        let [name, tag = 'latest'] = input.split('@');
        return { name: '@' + name, tag };
    }
    else {
        let [name, tag = 'latest'] = input.split('@');
        return { name, tag };
    }
}
